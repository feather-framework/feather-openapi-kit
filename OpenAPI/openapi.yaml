openapi: 3.1.0
info:
  title: Example
  description: Example API description
  contact:
    name: Binary Birds
    url: https://binarybirds.com
    email: info@binarybirds.com
  version: 1.0.0
tags:
- name: ExampleTag
  description: ''
- name: FooTag
  description: ''
servers:
- url: http://localhost:8080
  description: dev
paths:
  /example/{exampleId}:
    summary: path summary
    description: path description
    parameters:
    - $ref: '#/components/parameters/ExampleParameter'
    get:
      tags:
      - ExampleTag
      summary: List profiles
      description: List available profiles
      operationId: ExampleOperation
      parameters:
      - $ref: '#/components/parameters/ExampleParameter'
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FooSchema'
        400:
          $ref: '#/components/responses/ExampleResponse'
      security:
      - ExampleSecurityScheme: []
  /foo/{fooId}:
    summary: path summary
    description: path description
    parameters:
    - $ref: '#/components/parameters/FooParameter'
    get:
      tags:
      - FooTag
      summary: List profiles
      description: List available profiles
      operationId: FooOperation
      parameters:
      - $ref: '#/components/parameters/FooParameter'
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FooSchema'
        400:
          $ref: '#/components/responses/FooResponse'
      security: []
components:
  schemas:
    ExampleField:
      type: string
    ExampleSchema:
      type: object
      properties:
        ExampleField:
          $ref: '#/components/schemas/ExampleField'
    FooField:
      type: string
    FooSchema:
      type: object
      properties:
        bar:
          $ref: '#/components/schemas/FooSchema'
        FooField:
          $ref: '#/components/schemas/FooField'
        FooSchema:
          $ref: '#/components/schemas/FooSchema'
      required:
      - FooSchema
  responses:
    ExampleResponse:
      description: lorem ipsum
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExampleSchema'
    FooResponse:
      description: lorem ipsum
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FooSchema'
  parameters:
    ExampleParameter:
      name: exampleId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/ExampleSchema'
      description: example parameter
    FooParameter:
      name: fooId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/FooField'
  requestBodies:
    ExampleRequestBody:
      description: Example request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExampleSchema'
      required: true
  headers:
    X-Example-Header:
      schema:
        type: string
        title: Example header
        description: test
    X-Foo-Header:
      schema:
        type: integer
        title: Foo header
        description: test
  securitySchemes:
    ExampleSecurityScheme:
      description: Authorization header using a Bearer token
      type: http
      scheme: bearer
      bearerFormat: token
    FooSecurityScheme:
      description: Authorization header using a Bearer token
      type: http
      scheme: bearer
      bearerFormat: token
